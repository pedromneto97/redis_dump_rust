name: CI & Release

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:


jobs:

  test:
    name: Analyze & Test (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run linter (clippy)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --all-features --all-targets

  build:
    name: Build Release Binaries (Matrix)
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: redis_dump_rust-linux
            bin_path: target/release/redis_dump_rust
          - os: macos-latest
            artifact_name: redis_dump_rust-macos
            bin_path: target/release/redis_dump_rust
          - os: windows-latest
            artifact_name: redis_dump_rust-windows.exe
            bin_path: target/release/redis_dump_rust.exe
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Build release binary
        run: cargo build --release --bin redis_dump_rust

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.bin_path }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux binary
        uses: softprops/action-gh-release@v1
        with:
          files: dist/redis_dump_rust-linux/redis_dump_rust
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS binary
        uses: softprops/action-gh-release@v1
        with:
          files: dist/redis_dump_rust-macos/redis_dump_rust
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows binary
        uses: softprops/action-gh-release@v1
        with:
          files: dist/redis_dump_rust-windows.exe/redis_dump_rust.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
